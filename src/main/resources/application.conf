object-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"

  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    parallelism-max = 20
  }
  throughput = 10
}

bd-dispatcher {
  type = PinnedDispatcher
  mailbox-type = "br.cefetmg.lsi.l2l.common.ComponentMailbox"
  executor = "thread-pool-executor"
}

collision-dispatcher {
  mailbox-type = "br.cefetmg.lsi.l2l.cluster.CollisionDetectorPriorityMailbox"
}

component-dispatcher {
  mailbox-type = "br.cefetmg.lsi.l2l.common.ComponentMailbox"
}

akka.actor.deployment {
  "/holder/object-*" {
    dispatcher = object-dispatcher
  }
}


akka {
  loglevel = "INFO"
  # licenseKey = "3CecWl2jg6z8m1nVtGXu408QnXHNFiTsr8QnaOmUsbcy4q7y8WsPaoX4osrm0xdaSL5G68tZsT5960FybRsWYlhZ2mN4vLKLxf60cbKekKbI7ZIFIS58gS8Xh0BJURKSd8rMGWl2k1LMDHB0NPg7rMZGFj554mA8eMtuMFXY"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    #the supervisorStrategy used by the "/user" guardian actor
    guardian-supervisor-strategy = "akka.actor.StoppingSupervisorStrategy"

    #definindo serializer mais eficiente que o padrao java
    #serializers.java = "com.romix.akka.serialization.kryo.KryoSerializer"

  }
  remote {
    log-remote-lifecycle-events = off
  }

  cluster {
    seed-nodes = [
      "akka.tcp://l2l@localhost:2551",	#creatholder=
      #"akka.tcp://l2l@10.1.255.219:2550",
      #"akka.tcp://l2l@10.1.255.218:2550",
    ]

    min-nr-of-members = 2
  }
  version = 2.5.32
}
